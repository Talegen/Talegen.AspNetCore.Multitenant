### YamlMime:ManagedReference
items:
- uid: Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1
  commentId: T:Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1
  id: ITenantContextAccessor`1
  parent: Talegen.AspNetCore.Multitenant
  children:
  - Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1.TenantContext
  langs:
  - csharp
  - vb
  name: ITenantContextAccessor<TTenant>
  nameWithType: ITenantContextAccessor<TTenant>
  fullName: Talegen.AspNetCore.Multitenant.ITenantContextAccessor<TTenant>
  type: Interface
  source:
    remote:
      path: src/ITenantContextAccessor.cs
      branch: main
      repo: https://github.com/Talegen/Talegen.AspNetCore.Multitenant
    id: ITenantContextAccessor
    path: ITenantContextAccessor.cs
    startLine: 22
  assemblies:
  - Talegen.AspNetCore.Multitenant
  namespace: Talegen.AspNetCore.Multitenant
  summary: "\nThis interface defines the minimum implementation of a tenant context accessor.\n"
  example: []
  syntax:
    content: >-
      public interface ITenantContextAccessor<TTenant>
          where TTenant : class, ITenant
    typeParameters:
    - id: TTenant
      description: The type of the tenant.
    content.vb: Public Interface ITenantContextAccessor(Of TTenant As {Class, ITenant})
  nameWithType.vb: ITenantContextAccessor(Of TTenant)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Talegen.AspNetCore.Multitenant.ITenantContextAccessor(Of TTenant)
  name.vb: ITenantContextAccessor(Of TTenant)
- uid: Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1.TenantContext
  commentId: P:Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1.TenantContext
  id: TenantContext
  parent: Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1
  langs:
  - csharp
  - vb
  name: TenantContext
  nameWithType: ITenantContextAccessor<TTenant>.TenantContext
  fullName: Talegen.AspNetCore.Multitenant.ITenantContextAccessor<TTenant>.TenantContext
  type: Property
  source:
    remote:
      path: src/ITenantContextAccessor.cs
      branch: main
      repo: https://github.com/Talegen/Talegen.AspNetCore.Multitenant
    id: TenantContext
    path: ITenantContextAccessor.cs
    startLine: 28
  assemblies:
  - Talegen.AspNetCore.Multitenant
  namespace: Talegen.AspNetCore.Multitenant
  summary: "\nGets or sets the tenant context.\n"
  example: []
  syntax:
    content: ITenantContext<TTenant> TenantContext { get; set; }
    parameters: []
    return:
      type: Talegen.AspNetCore.Multitenant.ITenantContext{{TTenant}}
      description: The tenant context.
    content.vb: Property TenantContext As ITenantContext(Of TTenant)
  overload: Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1.TenantContext*
  nameWithType.vb: ITenantContextAccessor(Of TTenant).TenantContext
  modifiers.csharp:
  - get
  - set
  fullName.vb: Talegen.AspNetCore.Multitenant.ITenantContextAccessor(Of TTenant).TenantContext
references:
- uid: Talegen.AspNetCore.Multitenant
  commentId: N:Talegen.AspNetCore.Multitenant
  name: Talegen.AspNetCore.Multitenant
  nameWithType: Talegen.AspNetCore.Multitenant
  fullName: Talegen.AspNetCore.Multitenant
- uid: Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1.TenantContext*
  commentId: Overload:Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1.TenantContext
  name: TenantContext
  nameWithType: ITenantContextAccessor<TTenant>.TenantContext
  fullName: Talegen.AspNetCore.Multitenant.ITenantContextAccessor<TTenant>.TenantContext
  nameWithType.vb: ITenantContextAccessor(Of TTenant).TenantContext
  fullName.vb: Talegen.AspNetCore.Multitenant.ITenantContextAccessor(Of TTenant).TenantContext
- uid: Talegen.AspNetCore.Multitenant.ITenantContext{{TTenant}}
  commentId: T:Talegen.AspNetCore.Multitenant.ITenantContext{`0}
  parent: Talegen.AspNetCore.Multitenant
  definition: Talegen.AspNetCore.Multitenant.ITenantContext`1
  name: ITenantContext<TTenant>
  nameWithType: ITenantContext<TTenant>
  fullName: Talegen.AspNetCore.Multitenant.ITenantContext<TTenant>
  nameWithType.vb: ITenantContext(Of TTenant)
  fullName.vb: Talegen.AspNetCore.Multitenant.ITenantContext(Of TTenant)
  name.vb: ITenantContext(Of TTenant)
  spec.csharp:
  - uid: Talegen.AspNetCore.Multitenant.ITenantContext`1
    name: ITenantContext
    nameWithType: ITenantContext
    fullName: Talegen.AspNetCore.Multitenant.ITenantContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Talegen.AspNetCore.Multitenant.ITenantContext`1
    name: ITenantContext
    nameWithType: ITenantContext
    fullName: Talegen.AspNetCore.Multitenant.ITenantContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: )
    nameWithType: )
    fullName: )
- uid: Talegen.AspNetCore.Multitenant.ITenantContext`1
  commentId: T:Talegen.AspNetCore.Multitenant.ITenantContext`1
  name: ITenantContext<TTenant>
  nameWithType: ITenantContext<TTenant>
  fullName: Talegen.AspNetCore.Multitenant.ITenantContext<TTenant>
  nameWithType.vb: ITenantContext(Of TTenant)
  fullName.vb: Talegen.AspNetCore.Multitenant.ITenantContext(Of TTenant)
  name.vb: ITenantContext(Of TTenant)
  spec.csharp:
  - uid: Talegen.AspNetCore.Multitenant.ITenantContext`1
    name: ITenantContext
    nameWithType: ITenantContext
    fullName: Talegen.AspNetCore.Multitenant.ITenantContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Talegen.AspNetCore.Multitenant.ITenantContext`1
    name: ITenantContext
    nameWithType: ITenantContext
    fullName: Talegen.AspNetCore.Multitenant.ITenantContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: )
    nameWithType: )
    fullName: )
