### YamlMime:ManagedReference
items:
- uid: Talegen.AspNetCore.Multitenant.TenantContextAccessor`1
  commentId: T:Talegen.AspNetCore.Multitenant.TenantContextAccessor`1
  id: TenantContextAccessor`1
  parent: Talegen.AspNetCore.Multitenant
  children:
  - Talegen.AspNetCore.Multitenant.TenantContextAccessor`1.TenantContext
  langs:
  - csharp
  - vb
  name: TenantContextAccessor<TTenant>
  nameWithType: TenantContextAccessor<TTenant>
  fullName: Talegen.AspNetCore.Multitenant.TenantContextAccessor<TTenant>
  type: Class
  source:
    remote:
      path: src/TenantContextAccessor.cs
      branch: main
      repo: https://github.com/Talegen/Talegen.AspNetCore.Multitenant
    id: TenantContextAccessor
    path: TenantContextAccessor.cs
    startLine: 25
  assemblies:
  - Talegen.AspNetCore.Multitenant
  namespace: Talegen.AspNetCore.Multitenant
  summary: "\nThis class implements a tenant context accessor for the multi-tenant application.\n"
  example: []
  syntax:
    content: 'public class TenantContextAccessor<TTenant> : ITenantContextAccessor<TTenant> where TTenant : class, ITenant'
    typeParameters:
    - id: TTenant
      description: The type of the tenant.
    content.vb: >-
      Public Class TenantContextAccessor(Of TTenant As {Class, ITenant})

          Implements ITenantContextAccessor(Of TTenant)
  seealso:
  - linkId: Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1
    commentId: T:Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1
  inheritance:
  - System.Object
  implements:
  - Talegen.AspNetCore.Multitenant.ITenantContextAccessor{{TTenant}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: TenantContextAccessor(Of TTenant)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Talegen.AspNetCore.Multitenant.TenantContextAccessor(Of TTenant)
  name.vb: TenantContextAccessor(Of TTenant)
- uid: Talegen.AspNetCore.Multitenant.TenantContextAccessor`1.TenantContext
  commentId: P:Talegen.AspNetCore.Multitenant.TenantContextAccessor`1.TenantContext
  id: TenantContext
  parent: Talegen.AspNetCore.Multitenant.TenantContextAccessor`1
  langs:
  - csharp
  - vb
  name: TenantContext
  nameWithType: TenantContextAccessor<TTenant>.TenantContext
  fullName: Talegen.AspNetCore.Multitenant.TenantContextAccessor<TTenant>.TenantContext
  type: Property
  source:
    remote:
      path: src/TenantContextAccessor.cs
      branch: main
      repo: https://github.com/Talegen/Talegen.AspNetCore.Multitenant
    id: TenantContext
    path: TenantContextAccessor.cs
    startLine: 31
  assemblies:
  - Talegen.AspNetCore.Multitenant
  namespace: Talegen.AspNetCore.Multitenant
  summary: "\nGets or sets the tenant context.\n"
  example: []
  syntax:
    content: public ITenantContext<TTenant> TenantContext { get; set; }
    parameters: []
    return:
      type: Talegen.AspNetCore.Multitenant.ITenantContext{{TTenant}}
      description: The tenant context.
    content.vb: Public Property TenantContext As ITenantContext(Of TTenant)
  overload: Talegen.AspNetCore.Multitenant.TenantContextAccessor`1.TenantContext*
  implements:
  - Talegen.AspNetCore.Multitenant.ITenantContextAccessor{{TTenant}}.TenantContext
  nameWithType.vb: TenantContextAccessor(Of TTenant).TenantContext
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Talegen.AspNetCore.Multitenant.TenantContextAccessor(Of TTenant).TenantContext
references:
- uid: Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1
  commentId: T:Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1
  name: ITenantContextAccessor<TTenant>
  nameWithType: ITenantContextAccessor<TTenant>
  fullName: Talegen.AspNetCore.Multitenant.ITenantContextAccessor<TTenant>
  nameWithType.vb: ITenantContextAccessor(Of TTenant)
  fullName.vb: Talegen.AspNetCore.Multitenant.ITenantContextAccessor(Of TTenant)
  name.vb: ITenantContextAccessor(Of TTenant)
  spec.csharp:
  - uid: Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1
    name: ITenantContextAccessor
    nameWithType: ITenantContextAccessor
    fullName: Talegen.AspNetCore.Multitenant.ITenantContextAccessor
  - name: <
    nameWithType: <
    fullName: <
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1
    name: ITenantContextAccessor
    nameWithType: ITenantContextAccessor
    fullName: Talegen.AspNetCore.Multitenant.ITenantContextAccessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: )
    nameWithType: )
    fullName: )
- uid: Talegen.AspNetCore.Multitenant
  commentId: N:Talegen.AspNetCore.Multitenant
  name: Talegen.AspNetCore.Multitenant
  nameWithType: Talegen.AspNetCore.Multitenant
  fullName: Talegen.AspNetCore.Multitenant
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Talegen.AspNetCore.Multitenant.ITenantContextAccessor{{TTenant}}
  commentId: T:Talegen.AspNetCore.Multitenant.ITenantContextAccessor{`0}
  parent: Talegen.AspNetCore.Multitenant
  definition: Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1
  name: ITenantContextAccessor<TTenant>
  nameWithType: ITenantContextAccessor<TTenant>
  fullName: Talegen.AspNetCore.Multitenant.ITenantContextAccessor<TTenant>
  nameWithType.vb: ITenantContextAccessor(Of TTenant)
  fullName.vb: Talegen.AspNetCore.Multitenant.ITenantContextAccessor(Of TTenant)
  name.vb: ITenantContextAccessor(Of TTenant)
  spec.csharp:
  - uid: Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1
    name: ITenantContextAccessor
    nameWithType: ITenantContextAccessor
    fullName: Talegen.AspNetCore.Multitenant.ITenantContextAccessor
  - name: <
    nameWithType: <
    fullName: <
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1
    name: ITenantContextAccessor
    nameWithType: ITenantContextAccessor
    fullName: Talegen.AspNetCore.Multitenant.ITenantContextAccessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Talegen.AspNetCore.Multitenant.TenantContextAccessor`1.TenantContext*
  commentId: Overload:Talegen.AspNetCore.Multitenant.TenantContextAccessor`1.TenantContext
  name: TenantContext
  nameWithType: TenantContextAccessor<TTenant>.TenantContext
  fullName: Talegen.AspNetCore.Multitenant.TenantContextAccessor<TTenant>.TenantContext
  nameWithType.vb: TenantContextAccessor(Of TTenant).TenantContext
  fullName.vb: Talegen.AspNetCore.Multitenant.TenantContextAccessor(Of TTenant).TenantContext
- uid: Talegen.AspNetCore.Multitenant.ITenantContextAccessor{{TTenant}}.TenantContext
  commentId: P:Talegen.AspNetCore.Multitenant.ITenantContextAccessor{`0}.TenantContext
  parent: Talegen.AspNetCore.Multitenant.ITenantContextAccessor{{TTenant}}
  definition: Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1.TenantContext
  name: TenantContext
  nameWithType: ITenantContextAccessor<TTenant>.TenantContext
  fullName: Talegen.AspNetCore.Multitenant.ITenantContextAccessor<TTenant>.TenantContext
  nameWithType.vb: ITenantContextAccessor(Of TTenant).TenantContext
  fullName.vb: Talegen.AspNetCore.Multitenant.ITenantContextAccessor(Of TTenant).TenantContext
- uid: Talegen.AspNetCore.Multitenant.ITenantContext{{TTenant}}
  commentId: T:Talegen.AspNetCore.Multitenant.ITenantContext{`0}
  parent: Talegen.AspNetCore.Multitenant
  definition: Talegen.AspNetCore.Multitenant.ITenantContext`1
  name: ITenantContext<TTenant>
  nameWithType: ITenantContext<TTenant>
  fullName: Talegen.AspNetCore.Multitenant.ITenantContext<TTenant>
  nameWithType.vb: ITenantContext(Of TTenant)
  fullName.vb: Talegen.AspNetCore.Multitenant.ITenantContext(Of TTenant)
  name.vb: ITenantContext(Of TTenant)
  spec.csharp:
  - uid: Talegen.AspNetCore.Multitenant.ITenantContext`1
    name: ITenantContext
    nameWithType: ITenantContext
    fullName: Talegen.AspNetCore.Multitenant.ITenantContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Talegen.AspNetCore.Multitenant.ITenantContext`1
    name: ITenantContext
    nameWithType: ITenantContext
    fullName: Talegen.AspNetCore.Multitenant.ITenantContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: )
    nameWithType: )
    fullName: )
- uid: Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1.TenantContext
  commentId: P:Talegen.AspNetCore.Multitenant.ITenantContextAccessor`1.TenantContext
  name: TenantContext
  nameWithType: ITenantContextAccessor<TTenant>.TenantContext
  fullName: Talegen.AspNetCore.Multitenant.ITenantContextAccessor<TTenant>.TenantContext
  nameWithType.vb: ITenantContextAccessor(Of TTenant).TenantContext
  fullName.vb: Talegen.AspNetCore.Multitenant.ITenantContextAccessor(Of TTenant).TenantContext
- uid: Talegen.AspNetCore.Multitenant.ITenantContext`1
  commentId: T:Talegen.AspNetCore.Multitenant.ITenantContext`1
  name: ITenantContext<TTenant>
  nameWithType: ITenantContext<TTenant>
  fullName: Talegen.AspNetCore.Multitenant.ITenantContext<TTenant>
  nameWithType.vb: ITenantContext(Of TTenant)
  fullName.vb: Talegen.AspNetCore.Multitenant.ITenantContext(Of TTenant)
  name.vb: ITenantContext(Of TTenant)
  spec.csharp:
  - uid: Talegen.AspNetCore.Multitenant.ITenantContext`1
    name: ITenantContext
    nameWithType: ITenantContext
    fullName: Talegen.AspNetCore.Multitenant.ITenantContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Talegen.AspNetCore.Multitenant.ITenantContext`1
    name: ITenantContext
    nameWithType: ITenantContext
    fullName: Talegen.AspNetCore.Multitenant.ITenantContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: )
    nameWithType: )
    fullName: )
