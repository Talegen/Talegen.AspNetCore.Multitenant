name: Publish to Nuget
on:
 workflow_dispatch: # Allow running the workflow manually from GitHub UI
 push:
    branches:
      - 'main'   # Run the workflow when pushing to the main branch
 pull_request:
   branches:
     - '*'       # Run the workflow for all pull requests.
 release:
   types:
     - published # Run the workflow when a new GitHub release is published 
env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{github.workspace}}/nuget
  
jobs:
  create_nuget:
    name: nuget prep
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
       fetch-depth: 0 # Get all history to allow automatic versioning using MinVer
    # Install the .NET SDK indicated in the global.json file
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
           dotnet-version: '8.0.x'
           
    # Create the NuGet package in the folder from the environment variable NuGetDirectory
    - run: dotnet pack ./src/Talegen.AspNetCore.Multitenant.csproj --configuration Release --output ${{env.NuGetDirectory}}

    # Publish the NuGet package as an artifact, so they can be used in follow-on jobs
    - uses: actions/upload-artifact@v4
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{env.NuGetDirectory}}/*.nupkg

  run_test:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
           dotnet-version: '8.0.x'
    - name: Run tests
      run: dotnet test ./src/Talegen.AspNetCore.Multitenant.sln --configuration Release

  deploy:
    # Publish only when creating a GitHub Release
    if: github.event_name == 'release'
    runs-on: windows-latest
    needs: [create_nuget,run_test]
    steps:
      # Download the NuGet package created in the previous job
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{env.NuGetDirectory}}

      # Install the .NET SDK
      - name: Setup .NET core
        uses: actions/setup-dotnet@v4
        with:
           dotnet-version: '8.0.x'

      # Publish all NuGet packages to NuGet.org
      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{env.NuGetDirectory}}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{secrets.NUGET_API_KEY}}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }
  
