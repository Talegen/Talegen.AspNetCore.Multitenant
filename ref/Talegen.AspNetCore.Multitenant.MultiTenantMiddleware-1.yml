### YamlMime:ManagedReference
items:
- uid: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1
  commentId: T:Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1
  id: MultiTenantMiddleware`1
  parent: Talegen.AspNetCore.Multitenant
  children:
  - Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)
  - Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger)
  - Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.Invoke(Microsoft.AspNetCore.Http.HttpContext)
  langs:
  - csharp
  - vb
  name: MultiTenantMiddleware<TTenant>
  nameWithType: MultiTenantMiddleware<TTenant>
  fullName: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware<TTenant>
  type: Class
  source:
    remote:
      path: src/MultiTenantMiddleware.cs
      branch: main
      repo: https://github.com/Talegen/Talegen.AspNetCore.Multitenant
    id: MultiTenantMiddleware
    path: MultiTenantMiddleware.cs
    startLine: 27
  assemblies:
  - Talegen.AspNetCore.Multitenant
  namespace: Talegen.AspNetCore.Multitenant
  summary: "\nThis class implements the multi-tenant middleware processor for retrieving and storing the tenant information into the current request context.\n"
  example: []
  syntax:
    content: >-
      public class MultiTenantMiddleware<TTenant>
          where TTenant : class, ITenant, new()
    typeParameters:
    - id: TTenant
      description: The type of the tenant.
    content.vb: Public Class MultiTenantMiddleware(Of TTenant As {Class, ITenant, New})
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: MultiTenantMiddleware(Of TTenant)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware(Of TTenant)
  name.vb: MultiTenantMiddleware(Of TTenant)
- uid: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)
  commentId: M:Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)
  id: '#ctor(Microsoft.AspNetCore.Http.RequestDelegate)'
  parent: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1
  langs:
  - csharp
  - vb
  name: MultiTenantMiddleware(RequestDelegate)
  nameWithType: MultiTenantMiddleware<TTenant>.MultiTenantMiddleware(RequestDelegate)
  fullName: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware<TTenant>.MultiTenantMiddleware(Microsoft.AspNetCore.Http.RequestDelegate)
  type: Constructor
  source:
    remote:
      path: src/MultiTenantMiddleware.cs
      branch: main
      repo: https://github.com/Talegen/Talegen.AspNetCore.Multitenant
    id: .ctor
    path: MultiTenantMiddleware.cs
    startLine: 43
  assemblies:
  - Talegen.AspNetCore.Multitenant
  namespace: Talegen.AspNetCore.Multitenant
  summary: "\nInitializes a new instance of the <xref href=\"Talegen.AspNetCore.Multitenant.MultiTenantMiddleware%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public MultiTenantMiddleware(RequestDelegate next)
    parameters:
    - id: next
      type: Microsoft.AspNetCore.Http.RequestDelegate
      description: The next request delegate.
    content.vb: Public Sub New(next As RequestDelegate)
  overload: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.#ctor*
  nameWithType.vb: MultiTenantMiddleware(Of TTenant).MultiTenantMiddleware(RequestDelegate)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware(Of TTenant).MultiTenantMiddleware(Microsoft.AspNetCore.Http.RequestDelegate)
- uid: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger)'
  parent: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1
  langs:
  - csharp
  - vb
  name: MultiTenantMiddleware(RequestDelegate, ILogger)
  nameWithType: MultiTenantMiddleware<TTenant>.MultiTenantMiddleware(RequestDelegate, ILogger)
  fullName: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware<TTenant>.MultiTenantMiddleware(Microsoft.AspNetCore.Http.RequestDelegate, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/MultiTenantMiddleware.cs
      branch: main
      repo: https://github.com/Talegen/Talegen.AspNetCore.Multitenant
    id: .ctor
    path: MultiTenantMiddleware.cs
    startLine: 53
  assemblies:
  - Talegen.AspNetCore.Multitenant
  namespace: Talegen.AspNetCore.Multitenant
  summary: "\nInitializes a new instance of the <xref href=\"Talegen.AspNetCore.Multitenant.MultiTenantMiddleware%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public MultiTenantMiddleware(RequestDelegate next, ILogger logger)
    parameters:
    - id: next
      type: Microsoft.AspNetCore.Http.RequestDelegate
      description: The next request delegate.
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: Contains a logger instance.
    content.vb: Public Sub New(next As RequestDelegate, logger As ILogger)
  overload: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.#ctor*
  nameWithType.vb: MultiTenantMiddleware(Of TTenant).MultiTenantMiddleware(RequestDelegate, ILogger)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware(Of TTenant).MultiTenantMiddleware(Microsoft.AspNetCore.Http.RequestDelegate, Microsoft.Extensions.Logging.ILogger)
- uid: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.Invoke(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.Invoke(Microsoft.AspNetCore.Http.HttpContext)
  id: Invoke(Microsoft.AspNetCore.Http.HttpContext)
  parent: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1
  langs:
  - csharp
  - vb
  name: Invoke(HttpContext)
  nameWithType: MultiTenantMiddleware<TTenant>.Invoke(HttpContext)
  fullName: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware<TTenant>.Invoke(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: src/MultiTenantMiddleware.cs
      branch: main
      repo: https://github.com/Talegen/Talegen.AspNetCore.Multitenant
    id: Invoke
    path: MultiTenantMiddleware.cs
    startLine: 66
  assemblies:
  - Talegen.AspNetCore.Multitenant
  namespace: Talegen.AspNetCore.Multitenant
  summary: "\nInvokes the specified context request to retrieve and apply the tenant context.\n"
  remarks: "\nFor every request, the HttpContext is modified here to get the tenant context. The Tenant context property is then updated with tenant lookup results.\n"
  example: []
  syntax:
    content: public Task Invoke(HttpContext context)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The HTTP context.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Invoke(context As HttpContext) As Task
  overload: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.Invoke*
  nameWithType.vb: MultiTenantMiddleware(Of TTenant).Invoke(HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware(Of TTenant).Invoke(Microsoft.AspNetCore.Http.HttpContext)
references:
- uid: Talegen.AspNetCore.Multitenant
  commentId: N:Talegen.AspNetCore.Multitenant
  name: Talegen.AspNetCore.Multitenant
  nameWithType: Talegen.AspNetCore.Multitenant
  fullName: Talegen.AspNetCore.Multitenant
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1
  commentId: T:Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1
  name: MultiTenantMiddleware<TTenant>
  nameWithType: MultiTenantMiddleware<TTenant>
  fullName: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware<TTenant>
  nameWithType.vb: MultiTenantMiddleware(Of TTenant)
  fullName.vb: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware(Of TTenant)
  name.vb: MultiTenantMiddleware(Of TTenant)
  spec.csharp:
  - uid: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1
    name: MultiTenantMiddleware
    nameWithType: MultiTenantMiddleware
    fullName: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware
  - name: <
    nameWithType: <
    fullName: <
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1
    name: MultiTenantMiddleware
    nameWithType: MultiTenantMiddleware
    fullName: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: )
    nameWithType: )
    fullName: )
- uid: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.#ctor*
  commentId: Overload:Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.#ctor
  name: MultiTenantMiddleware
  nameWithType: MultiTenantMiddleware<TTenant>.MultiTenantMiddleware
  fullName: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware<TTenant>.MultiTenantMiddleware
  nameWithType.vb: MultiTenantMiddleware(Of TTenant).MultiTenantMiddleware
  fullName.vb: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware(Of TTenant).MultiTenantMiddleware
- uid: Microsoft.AspNetCore.Http.RequestDelegate
  commentId: T:Microsoft.AspNetCore.Http.RequestDelegate
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: RequestDelegate
  nameWithType: RequestDelegate
  fullName: Microsoft.AspNetCore.Http.RequestDelegate
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.Invoke*
  commentId: Overload:Talegen.AspNetCore.Multitenant.MultiTenantMiddleware`1.Invoke
  name: Invoke
  nameWithType: MultiTenantMiddleware<TTenant>.Invoke
  fullName: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware<TTenant>.Invoke
  nameWithType.vb: MultiTenantMiddleware(Of TTenant).Invoke
  fullName.vb: Talegen.AspNetCore.Multitenant.MultiTenantMiddleware(Of TTenant).Invoke
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
