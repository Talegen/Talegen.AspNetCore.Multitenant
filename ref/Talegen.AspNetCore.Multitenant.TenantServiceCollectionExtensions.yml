### YamlMime:ManagedReference
items:
- uid: Talegen.AspNetCore.Multitenant.TenantServiceCollectionExtensions
  commentId: T:Talegen.AspNetCore.Multitenant.TenantServiceCollectionExtensions
  id: TenantServiceCollectionExtensions
  parent: Talegen.AspNetCore.Multitenant
  children:
  - Talegen.AspNetCore.Multitenant.TenantServiceCollectionExtensions.AddMultiTenancy``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  langs:
  - csharp
  - vb
  name: TenantServiceCollectionExtensions
  nameWithType: TenantServiceCollectionExtensions
  fullName: Talegen.AspNetCore.Multitenant.TenantServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: src/TenantServiceCollectionExtensions.cs
      branch: main
      repo: https://github.com/Talegen/Talegen.AspNetCore.Multitenant
    id: TenantServiceCollectionExtensions
    path: TenantServiceCollectionExtensions.cs
    startLine: 23
  assemblies:
  - Talegen.AspNetCore.Multitenant
  namespace: Talegen.AspNetCore.Multitenant
  summary: "\nThis class contains service collection extensions for creating a tenant resolver.\n"
  example: []
  syntax:
    content: public static class TenantServiceCollectionExtensions
    content.vb: Public Module TenantServiceCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Talegen.AspNetCore.Multitenant.TenantServiceCollectionExtensions.AddMultiTenancy``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Talegen.AspNetCore.Multitenant.TenantServiceCollectionExtensions.AddMultiTenancy``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddMultiTenancy``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: Talegen.AspNetCore.Multitenant.TenantServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMultiTenancy<TTenant>(IServiceCollection)
  nameWithType: TenantServiceCollectionExtensions.AddMultiTenancy<TTenant>(IServiceCollection)
  fullName: Talegen.AspNetCore.Multitenant.TenantServiceCollectionExtensions.AddMultiTenancy<TTenant>(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/TenantServiceCollectionExtensions.cs
      branch: main
      repo: https://github.com/Talegen/Talegen.AspNetCore.Multitenant
    id: AddMultiTenancy
    path: TenantServiceCollectionExtensions.cs
    startLine: 31
  assemblies:
  - Talegen.AspNetCore.Multitenant
  namespace: Talegen.AspNetCore.Multitenant
  summary: "\nAdds the multi tenancy.\n"
  example: []
  syntax:
    content: >-
      public static TenantBuilder<TTenant> AddMultiTenancy<TTenant>(this IServiceCollection services)
          where TTenant : class, ITenant, new()
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The services.
    typeParameters:
    - id: TTenant
      description: The type of the tenant.
    return:
      type: Talegen.AspNetCore.Multitenant.TenantBuilder{{TTenant}}
      description: Returns the tenant builder.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMultiTenancy(Of TTenant As {Class, ITenant, New})(services As IServiceCollection) As TenantBuilder(Of TTenant)
  overload: Talegen.AspNetCore.Multitenant.TenantServiceCollectionExtensions.AddMultiTenancy*
  nameWithType.vb: TenantServiceCollectionExtensions.AddMultiTenancy(Of TTenant)(IServiceCollection)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Talegen.AspNetCore.Multitenant.TenantServiceCollectionExtensions.AddMultiTenancy(Of TTenant)(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: AddMultiTenancy(Of TTenant)(IServiceCollection)
references:
- uid: Talegen.AspNetCore.Multitenant
  commentId: N:Talegen.AspNetCore.Multitenant
  name: Talegen.AspNetCore.Multitenant
  nameWithType: Talegen.AspNetCore.Multitenant
  fullName: Talegen.AspNetCore.Multitenant
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Talegen.AspNetCore.Multitenant.TenantServiceCollectionExtensions.AddMultiTenancy*
  commentId: Overload:Talegen.AspNetCore.Multitenant.TenantServiceCollectionExtensions.AddMultiTenancy
  name: AddMultiTenancy
  nameWithType: TenantServiceCollectionExtensions.AddMultiTenancy
  fullName: Talegen.AspNetCore.Multitenant.TenantServiceCollectionExtensions.AddMultiTenancy
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Talegen.AspNetCore.Multitenant.TenantBuilder{{TTenant}}
  commentId: T:Talegen.AspNetCore.Multitenant.TenantBuilder{``0}
  parent: Talegen.AspNetCore.Multitenant
  definition: Talegen.AspNetCore.Multitenant.TenantBuilder`1
  name: TenantBuilder<TTenant>
  nameWithType: TenantBuilder<TTenant>
  fullName: Talegen.AspNetCore.Multitenant.TenantBuilder<TTenant>
  nameWithType.vb: TenantBuilder(Of TTenant)
  fullName.vb: Talegen.AspNetCore.Multitenant.TenantBuilder(Of TTenant)
  name.vb: TenantBuilder(Of TTenant)
  spec.csharp:
  - uid: Talegen.AspNetCore.Multitenant.TenantBuilder`1
    name: TenantBuilder
    nameWithType: TenantBuilder
    fullName: Talegen.AspNetCore.Multitenant.TenantBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Talegen.AspNetCore.Multitenant.TenantBuilder`1
    name: TenantBuilder
    nameWithType: TenantBuilder
    fullName: Talegen.AspNetCore.Multitenant.TenantBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Talegen.AspNetCore.Multitenant.TenantBuilder`1
  commentId: T:Talegen.AspNetCore.Multitenant.TenantBuilder`1
  parent: Talegen.AspNetCore.Multitenant
  name: TenantBuilder<TTenant>
  nameWithType: TenantBuilder<TTenant>
  fullName: Talegen.AspNetCore.Multitenant.TenantBuilder<TTenant>
  nameWithType.vb: TenantBuilder(Of TTenant)
  fullName.vb: Talegen.AspNetCore.Multitenant.TenantBuilder(Of TTenant)
  name.vb: TenantBuilder(Of TTenant)
  spec.csharp:
  - uid: Talegen.AspNetCore.Multitenant.TenantBuilder`1
    name: TenantBuilder
    nameWithType: TenantBuilder
    fullName: Talegen.AspNetCore.Multitenant.TenantBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Talegen.AspNetCore.Multitenant.TenantBuilder`1
    name: TenantBuilder
    nameWithType: TenantBuilder
    fullName: Talegen.AspNetCore.Multitenant.TenantBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTenant
    nameWithType: TTenant
    fullName: TTenant
  - name: )
    nameWithType: )
    fullName: )
