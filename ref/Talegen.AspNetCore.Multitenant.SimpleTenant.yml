### YamlMime:ManagedReference
items:
- uid: Talegen.AspNetCore.Multitenant.SimpleTenant
  commentId: T:Talegen.AspNetCore.Multitenant.SimpleTenant
  id: SimpleTenant
  parent: Talegen.AspNetCore.Multitenant
  children:
  - Talegen.AspNetCore.Multitenant.SimpleTenant.Id
  - Talegen.AspNetCore.Multitenant.SimpleTenant.Identifier
  - Talegen.AspNetCore.Multitenant.SimpleTenant.Properties
  langs:
  - csharp
  - vb
  name: SimpleTenant
  nameWithType: SimpleTenant
  fullName: Talegen.AspNetCore.Multitenant.SimpleTenant
  type: Class
  source:
    remote:
      path: src/SimpleTenant.cs
      branch: main
      repo: https://github.com/Talegen/Talegen.AspNetCore.Multitenant
    id: SimpleTenant
    path: SimpleTenant.cs
    startLine: 25
  assemblies:
  - Talegen.AspNetCore.Multitenant
  namespace: Talegen.AspNetCore.Multitenant
  summary: "\nImplements a simple basic Tenant information model to get off the ground.\n"
  example: []
  syntax:
    content: 'public class SimpleTenant : ITenant'
    content.vb: >-
      Public Class SimpleTenant

          Implements ITenant
  seealso:
  - linkId: Talegen.AspNetCore.Multitenant.ITenant
    commentId: T:Talegen.AspNetCore.Multitenant.ITenant
  inheritance:
  - System.Object
  implements:
  - Talegen.AspNetCore.Multitenant.ITenant
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Talegen.AspNetCore.Multitenant.SimpleTenant.Id
  commentId: P:Talegen.AspNetCore.Multitenant.SimpleTenant.Id
  id: Id
  parent: Talegen.AspNetCore.Multitenant.SimpleTenant
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: SimpleTenant.Id
  fullName: Talegen.AspNetCore.Multitenant.SimpleTenant.Id
  type: Property
  source:
    remote:
      path: src/SimpleTenant.cs
      branch: main
      repo: https://github.com/Talegen/Talegen.AspNetCore.Multitenant
    id: Id
    path: SimpleTenant.cs
    startLine: 31
  assemblies:
  - Talegen.AspNetCore.Multitenant
  namespace: Talegen.AspNetCore.Multitenant
  summary: "\nGets or sets the durable tenant identifier that will never change.\n"
  example: []
  syntax:
    content: public Guid Id { get; set; }
    parameters: []
    return:
      type: System.Guid
      description: The identifier.
    content.vb: Public Property Id As Guid
  overload: Talegen.AspNetCore.Multitenant.SimpleTenant.Id*
  implements:
  - Talegen.AspNetCore.Multitenant.ITenant.Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Talegen.AspNetCore.Multitenant.SimpleTenant.Identifier
  commentId: P:Talegen.AspNetCore.Multitenant.SimpleTenant.Identifier
  id: Identifier
  parent: Talegen.AspNetCore.Multitenant.SimpleTenant
  langs:
  - csharp
  - vb
  name: Identifier
  nameWithType: SimpleTenant.Identifier
  fullName: Talegen.AspNetCore.Multitenant.SimpleTenant.Identifier
  type: Property
  source:
    remote:
      path: src/SimpleTenant.cs
      branch: main
      repo: https://github.com/Talegen/Talegen.AspNetCore.Multitenant
    id: Identifier
    path: SimpleTenant.cs
    startLine: 37
  assemblies:
  - Talegen.AspNetCore.Multitenant
  namespace: Talegen.AspNetCore.Multitenant
  summary: "\nGets or sets the tenant identifier name.\n"
  example: []
  syntax:
    content: public string Identifier { get; set; }
    parameters: []
    return:
      type: System.String
      description: The name.
    content.vb: Public Property Identifier As String
  overload: Talegen.AspNetCore.Multitenant.SimpleTenant.Identifier*
  implements:
  - Talegen.AspNetCore.Multitenant.ITenant.Identifier
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Talegen.AspNetCore.Multitenant.SimpleTenant.Properties
  commentId: P:Talegen.AspNetCore.Multitenant.SimpleTenant.Properties
  id: Properties
  parent: Talegen.AspNetCore.Multitenant.SimpleTenant
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: SimpleTenant.Properties
  fullName: Talegen.AspNetCore.Multitenant.SimpleTenant.Properties
  type: Property
  source:
    remote:
      path: src/SimpleTenant.cs
      branch: main
      repo: https://github.com/Talegen/Talegen.AspNetCore.Multitenant
    id: Properties
    path: SimpleTenant.cs
    startLine: 43
  assemblies:
  - Talegen.AspNetCore.Multitenant
  namespace: Talegen.AspNetCore.Multitenant
  summary: "\nGets or sets any additional tenant properties.\n"
  example: []
  syntax:
    content: public Dictionary<string, string> Properties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: The properties.
    content.vb: Public Property Properties As Dictionary(Of String, String)
  overload: Talegen.AspNetCore.Multitenant.SimpleTenant.Properties*
  implements:
  - Talegen.AspNetCore.Multitenant.ITenant.Properties
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Talegen.AspNetCore.Multitenant.ITenant
  commentId: T:Talegen.AspNetCore.Multitenant.ITenant
  parent: Talegen.AspNetCore.Multitenant
  name: ITenant
  nameWithType: ITenant
  fullName: Talegen.AspNetCore.Multitenant.ITenant
- uid: Talegen.AspNetCore.Multitenant
  commentId: N:Talegen.AspNetCore.Multitenant
  name: Talegen.AspNetCore.Multitenant
  nameWithType: Talegen.AspNetCore.Multitenant
  fullName: Talegen.AspNetCore.Multitenant
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Talegen.AspNetCore.Multitenant.SimpleTenant.Id*
  commentId: Overload:Talegen.AspNetCore.Multitenant.SimpleTenant.Id
  name: Id
  nameWithType: SimpleTenant.Id
  fullName: Talegen.AspNetCore.Multitenant.SimpleTenant.Id
- uid: Talegen.AspNetCore.Multitenant.ITenant.Id
  commentId: P:Talegen.AspNetCore.Multitenant.ITenant.Id
  parent: Talegen.AspNetCore.Multitenant.ITenant
  name: Id
  nameWithType: ITenant.Id
  fullName: Talegen.AspNetCore.Multitenant.ITenant.Id
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Talegen.AspNetCore.Multitenant.SimpleTenant.Identifier*
  commentId: Overload:Talegen.AspNetCore.Multitenant.SimpleTenant.Identifier
  name: Identifier
  nameWithType: SimpleTenant.Identifier
  fullName: Talegen.AspNetCore.Multitenant.SimpleTenant.Identifier
- uid: Talegen.AspNetCore.Multitenant.ITenant.Identifier
  commentId: P:Talegen.AspNetCore.Multitenant.ITenant.Identifier
  parent: Talegen.AspNetCore.Multitenant.ITenant
  name: Identifier
  nameWithType: ITenant.Identifier
  fullName: Talegen.AspNetCore.Multitenant.ITenant.Identifier
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Talegen.AspNetCore.Multitenant.SimpleTenant.Properties*
  commentId: Overload:Talegen.AspNetCore.Multitenant.SimpleTenant.Properties
  name: Properties
  nameWithType: SimpleTenant.Properties
  fullName: Talegen.AspNetCore.Multitenant.SimpleTenant.Properties
- uid: Talegen.AspNetCore.Multitenant.ITenant.Properties
  commentId: P:Talegen.AspNetCore.Multitenant.ITenant.Properties
  parent: Talegen.AspNetCore.Multitenant.ITenant
  name: Properties
  nameWithType: ITenant.Properties
  fullName: Talegen.AspNetCore.Multitenant.ITenant.Properties
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
